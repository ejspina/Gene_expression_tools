library(DESeq2)
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts_10rep.txt", row.names="miRNA")
conditions <- c("0dpa", "0dpa", "1dpa", "1dpa", "3dpa", "3dpa", "3dpa", "8dpa", "8dpa", "8dpa")

#x <- read.delim("C:/RNAseq/polya_data/rpkm/count_strand_redo_rpkm5for3.txt", row.names="Gene")
#conditions <- c("A", "A", "A", "B", "B", "B", "C", "C", "C", "D", "D", "D")

design <- factor(conditions)
coldata <- data.frame(cbind(colnames(x), group=design))

#DESeq
dds <- DESeqDataSetFromMatrix(x, coldata, design=~group)
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT01 <- results(ddsLRT, contrast=c("group","2","1"))
resLRT03 <- results(ddsLRT, contrast=c("group","3","1"))
resLRT08 <- results(ddsLRT, contrast=c("group","4","1"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)

#Export results
write.table(as.data.frame(resLRTOrdered), file="C:/rnaseq/mirna_data/clusters/10rep_redo2/DEseq2_1cpm3redo_nopara2_ANOVA-like_LRT_redo.txt", quote=FALSE, sep='\t')
write.table(as.data.frame(resLRTOrdered01), file="C:/rnaseq/mirna_data/clusters/10rep_redo2/DEseq2_1cpm3redo_nopara2_1dpa_redo.txt", quote=FALSE, sep='\t')
write.table(as.data.frame(resLRTOrdered03), file="C:/rnaseq/mirna_data/clusters/10rep_redo2/DEseq2_1cpm3redo_nopara2_3dpa_redo.txt", quote=FALSE, sep='\t')
write.table(as.data.frame(resLRTOrdered08), file="C:/rnaseq/mirna_data/clusters/10rep_redo2/DEseq2_1cpm3redo_nopara2_8dpa_redo.txt", quote=FALSE, sep='\t')
#write.table(as.data.frame(resLRTOrdered), file="C:/rnaseq/polya_data/clusters/DESeq_5rpkm3redo_ANOVA-like_LRT_redo.txt", quote=FALSE, sep='\t')
#write.table(as.data.frame(resLRTOrdered01), file="C:/rnaseq/polya_data/clusters/DESeq_5rpkm3redo_1dpa_redo.txt", quote=FALSE, sep='\t')
#write.table(as.data.frame(resLRTOrdered03), file="C:/rnaseq/polya_data/clusters/DESeq_5rpkm3redo_3dpa_redo.txt", quote=FALSE, sep='\t')
#write.table(as.data.frame(resLRTOrdered08), file="C:/rnaseq/polya_data/clusters/DESeq_5rpkm3redo_8dpa_redo.txt", quote=FALSE, sep='\t')

#Export summaries
#sink("C:/rnaseq/polya_data/clusters/DESeq_5rpkm3redo_DESeq2_LRT_summaries_redo.txt")
sink("C:/rnaseq/mirna_data/clusters/10rep_redo2/DEseq2_1cpm3redo_nopara2_LRT_summaries_redo2.txt")
"ANOVA-like Comparison"
summary(resLRT)
"1dpa"
summary(resLRT01)
"3dpa"
summary(resLRT03)
"8dpa"
summary(resLRT08)
sink()

#Plot all DE genes one-by-one
#resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
#Adjust plotting lattice based on number of DE genes
#source("C:/users/eli/desktop/r_scripts/get_factors.r")
#L <- length(colnames(resLRTSig)
#F <- get_factors(L-L%%5)
#f <- c(F[length(F)/2], F[(length(F)/2) + 1)

for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="group", col="blue", pch=18)}
for(item in sig){
	d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
	ggplot(d, aes(x=group, y=count)) +
	geom_point(position=position_jitter(w=0.1,h=0)) +
	scale_y_log10(breaks=c(25,100,400))
}

#Explore transformed data
library(
rld <- rlog(ddsLRT)
vsd <- varianceStabilizingTransformation(ddsLRT)
rlogMat <- assay(rld)
vstMat <- assay(vsd)
plotPCA(ddsLRT, intgroup=c("group"))
notAllZero <- (rowSums(counts(ddsLRT))>0)
meanSdPlot(counts(ddsLRT,normalized=TRUE)[notAllZero,], main="Raw Counts")
par(mfrow=c(1,3))
meanSdPlot(log2(counts(ddsLRT,normalized=TRUE)[notAllZero,] + 1), main="Log2")
meanSdPlot(assay(rld[notAllZero,]), main="rLog")
meanSdPlot(assay(vsd[notAllZero,]), main="VST")
par(mfrow=c(1,1))

#Transformations
rld <- rlog(ddsLRT)
vsd <- varianceStabilizingTransformation(ddsLRT)
rlogMat <- assay(rld)
vstMat <- assay(vsd)
write.table(rlogMat, file="C:/rnaseq/mirna_data/clusters/10rep_redo2/1cpm3_nopara2_rLogmat_redo2.txt", quote=FALSE, sep='\t')
write.table(vstMat, file="C:/rnaseq/mirna_data/clusters/10rep_redo2/1cpm3_nopara2_VSTmat_redo2.txt", quote=FALSE, sep='\t')
