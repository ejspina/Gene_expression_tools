par(mar=c(5.1,4.1,4.1,2.1)
hist(x$A16)
par(mar=c(5.1,4.1,4.1,2.1))
hist(x$A16)
plot(x$A16)
x <- read.delim("C:/RNAseq/miRNA_data/compiled_miR_expression_data_norm.txt")
View(compiled_miR_expression_data_norm)
hist(x$A16)
par(mai=c(1,1,1,1))
hist(x$A16)
x <- read.delim("C:/RNAseq/miRNA_data/compiled_miR_expression_data_norm.txt")
hist(x$A16)
x2 <- log2(x[2:13])
hist(x2$A16)
view(x2)
View(x2)
hist(x2$A16, main="miR 0.1", xlab=NULL)
hist(x2$A16, main="miR 0.1", xlab="Log2 CPM")
hist(x2$A16, main="miR 0.1", xlab="Log2 CPM", col="blue")
hist(x2$A16, main="miR 0.1", xlab="Log2 CPM", col="lightblue")
hist(x2$X0.2, main="miR 0.2", xlab="Log2 CPM", col="lightblue")
hist(x2$X0.3, main="miR 0.3", xlab="Log2 CPM", col="lightblue")
hist(x2$A16, main="miR A16", xlab="Log2 CPM", col="lightblue")
hist(x2$A15, main="miR A15", xlab="Log2 CPM", col="lightblue")
hist(x2$X2.Jan, main="miR 1.2", xlab="Log2 CPM", col="lightblue")
hist(x2$X3.Jan, main="miR 1.3", xlab="Log2 CPM", col="lightblue")
hist(x2$X3.Mar, main="miR 3.1", xlab="Log2 CPM", col="lightblue")
hist(x2$X1.Mar, main="miR 3.1", xlab="Log2 CPM", col="lightblue")
hist(x2$X2.Mar, main="miR 3.2", xlab="Log2 CPM", col="lightblue")
hist(x2$X3.Mar, main="miR 3.3", xlab="Log2 CPM", col="lightblue")
hist(x2$X1.Aug, main="miR 8.1", xlab="Log2 CPM", col="lightblue")
hist(x2$X2.Aug, main="miR 8.2", xlab="Log2 CPM", col="lightblue")
hist(x2$X3.Aug, main="miR 8.3", xlab="Log2 CPM", col="lightblue")
data <- read.delim("C:/Users/Eli/Desktop/mir qpcr summary.txt")
View(data)
?plot
plot(data$Sample.Name, data$Avg)
plot(data$Sample.Name, data$Avg, type="l")
library(ggplot2)
attach(data)
qplot(Sample.Name, Avg, color=Target.Name)
qplot(Sample.Name, Avg, color=Target.Name, geom="bar")
qplot(Sample.Name, Avg, color=Target.Name, geom="line")
qplot(Sample.Name, Avg, color=Target.Name, geom="point")
qplot(Sample.Name, Avg, color=Targe.Name, geom="smooth")
qplot(Sample.Name, Avg, color=Target.Name, geom="smooth")
qplot(Sample.Name, Avg, color=Target.Name, geom="jitter")
qplot(Sample.Name, Avg, color=Target.Name, geom="boxplot")
qplot(Sample.Name, Avg, color=Target.Name, facets=Target.Name~)
qplot(Sample.Name, Avg, color=Target.Name, facets="Target.Name~")
qplot(Sample.Name, Avg, color=Target.Name, facets=~Target.Name)
qplot(Sample.Name, Avg, color=Target.Name, facets=~Target.Name, geom="bar")
qplot(Avg, color=Target.Name, facets=~Target.Name, geom="bar")
qplot(Avg, facets=~Target.Name, geom="bar", stat_bin=4)
qplot(Avg, facets=~Target.Name, geom="bar" + stat_bin(breaks=3))
qplot(Avg, facets=~Target.Name, geom="bar", breaks=3)
qplot(Avg, facets=~Target.Name, geom="bar", breaks=4)
qplot(Avg, facets=~Target.Name, geom="bar")
qplot(Avg, facets=~Target.Name, geom="bar", binwidth=1)
qplot(log2(Avg), facets=~Target.Name, geom="bar", binwidth=1)
avg = log2(Avg)
avg
qplot(avg, facets=~Target.Name, geom="bar", binwidth=1)
qplot(avg, facets=~Target.Name, geom="lines", binwidth=1)
qplot(avg, facets=~Target.Name, geom="line", binwidth=1)
qplot(Sample.Name, log2(Avg), facets=~Target.Name, geom="bar", binwidth=1)
?geom_bar
qplot(Sample.Name, stat="Avg", facets=~Target.Name, geom="bar", binwidth=1)
qplot(Sample.Name, stat=Avg, facets=~Target.Name, geom="bar", binwidth=1)
ggplot(data, aes(x = factor(Sample.Name), y = Avg)) + geom_bar(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity", facets=Target.Name)
ggplot(data, facets=Target.Name, aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=1)
ggplot(data, aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=3)
ggplot(data, aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4)
ggplot(data, stat="log", aes(x = Sample.Name, y = Avg)) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4)
ggplot(data, aes(x = Sample.Name, y = log2(Avg))) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4)
ggplot(data, aes(x = Sample.Name, y = log2(Avg))) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4) + geom_errorbar(data=SEM)
ggplot(data, aes(x = Sample.Name, y = log2(Avg))) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4) + geom_errorbar(data=SEM, stat="identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg))) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4)
ggplot(data, aes(x = Sample.Name, y = log2(Avg))) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4) + geom_errorbar(aes(ymin=Avg-SEM, width=.1))
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name)) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4) + geom_errorbar(aes(ymin=Avg-SEM, width=.1))
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Avg-SEM, width=.1))
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name)) + geom_bar(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name)) + geom_linr(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name)) + geom_line(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name, color=Target.Name)) + geom_line(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name, color=Target.Name)) + geom_smooth(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name, color=Target.Name)) + geom_point(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg), group=Target.Name, color=Target.Name)) + geom_bar(stat = "identity")
ggplot(data, aes(x = Sample.Name, y = log2(Avg))) + geom_bar(stat = "identity") +facet_wrap(~Target.Name, nrow=4)
?heatmap.2
library(edgeR)
library(DESeq2)
#Load Sample Data
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts.txt", row.names="miRNA
#Prepare sample annotations
conditions <- c("A", "A", "B", "B", "C", "C", "C", "D", "D", "D")
design <- factor(conditions)
coldata <- data.frame(cbind(colnames(x), group=design))
conditions <- c("A", "A", "B", "B", "C", "C", "C", "D", "D", "D")
design <- factor(conditions)
coldata <- data.frame(cbind(colnames(x), group=design))
coldata <- data.frame(cbind(colnames(x), group=design))
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts.txt", row.names="miRNA)
)
")"
")"
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts.txt", row.names="miRNA")
coldata <- data.frame(cbind(colnames(x), group=design))
dds <- DESeqDataSetFromMatrix(new, coldata, design=~group)
dds <- DESeqDataSetFromMatrix(x, coldata, design=~group)
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT
resLRT01 <- results(ddsLRT, contrast=c("group","1","2"))
resLRT03 <- results(ddsLRT, contrast=c("group","1","3"))
resLRT08 <- results(ddsLRT, contrast=c("group","1","4"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
resLRT
resLRTsig
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
resLRTSig
#Export results
write.table(as.data.frame(resLRTOrdered), file="C:/rnaseq/mirna_data/clusters/10rep_redo_DEseq-EdgeR/DEseq2_1cpm3redo_nopara2_ANOVA-like_LRT_redo.txt", quote=FALSE, sep='\t')
write.table(as.data.frame(resLRTOrdered01), file="C:/rnaseq/mirna_data/clusters/10rep_redo_DEseq-EdgeR/DEseq2_1cpm3redo_nopara2_1dpa_redo.txt", quote=FALSE, sep='\t')
write.table(as.data.frame(resLRTOrdered03), file="C:/rnaseq/mirna_data/clusters/10rep_redo_DEseq-EdgeR/DEseq2_1cpm3redo_nopara2_3dpa_redo.txt", quote=FALSE, sep='\t')
write.table(as.data.frame(resLRTOrdered08), file="C:/rnaseq/mirna_data/clusters/10rep_redo_DEseq-EdgeR/DEseq2_1cpm3redo_nopara2_8dpa_redo.txt", quote=FALSE, sep='\t')
#Export summaries
sink("C:/rnaseq/mirna_data/clusters/10rep_redo_DEseq-EdgeR/1cpm3_10repredo_DESeq2_LRT_summaries_redo.txt")
"ANOVA-like Comparison"
summary(resLRT)
"1dpa"
summary(resLRT01)
"3dpa"
summary(resLRT03)
"8dpa"
summary(resLRT08)
sink()
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="group", col="blue", pch=18)}
#for(item in sig){
#    d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
#	ggplot(d, aes(x=group, y=count)) +
#	geom_point(position=position_jitter(w=0.1,h=0)) +
#	scale_y_log10(breaks=c(25,100,400))
#}
for(item in sig){
d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
ggplot(d, aes(x=group, y=count)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
}
library(ggplot)
library(ggplot2)
for(item in sig){
d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
ggplot(d, aes(x=group, y=count)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
}
for(item in sig){
d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
ggplot(d, aes(x=group, y=count)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400))
}
for(item in sig){d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
ggplot(d, aes(x=group, y=count)) + geom_point(position=position_jitter(w=0.1,h=0)) + scale_y_log10(breaks=c(25,100,400))
}
for(item in sig){d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)ggplot(d, aes(x=group, y=count)) + geom_point(position=position_jitter(w=0.1,h=0)) + scale_y_log10(breaks=c(25,100,400))
}
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="group", col="blue", pch=18)}
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.01)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="group", col="blue", pch=18)}
?plotCounts
colData(x)
coldata
design
con <- c("0dpa", "0dpa", "1dpa", "1dpa", "3dpa", "3dpa", "3dpa", "8dpa", "8dpa", "8dpa")
des <- factor(con)
des
library(DESeq2)
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts.txt", row.names="miRNA
conditions <- c("0dpa", "0dpa", "1dpa", "1dpa", "3dpa", "3dpa", "3dpa", "8dpa", "8dpa", "8dpa")
design <- factor(conditions)
coldata <- data.frame(cbind(colnames(x), group=design))
#DESeq
dds <- DESeqDataSetFromMatrix(x, coldata, design=~group)
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT01 <- results(ddsLRT, contrast=c("group","1","2"))
resLRT03 <- results(ddsLRT, contrast=c("group","1","3"))
resLRT08 <- results(ddsLRT, contrast=c("group","1","4"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
library(DESeq2)
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts.txt", row.names="miRNA")
conditions <- c("0dpa", "0dpa", "1dpa", "1dpa", "3dpa", "3dpa", "3dpa", "8dpa", "8dpa", "8dpa")
design <- factor(conditions)
coldata <- data.frame(cbind(colnames(x), group=design))
#DESeq
dds <- DESeqDataSetFromMatrix(x, coldata, design=~group)
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT01 <- results(ddsLRT, contrast=c("group","1","2"))
resLRT03 <- results(ddsLRT, contrast=c("group","1","3"))
resLRT08 <- results(ddsLRT, contrast=c("group","1","4"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="group", col="blue", pch=18)}
design
coldata
coldata <- data.frame(cbind(colnames(x), group=design))
coldata
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup=c("0dpa", "1dpa", "3dpa", "8dpa"), col="blue", pch=18)}
coldata <- data.frame(cbind(colnames(x), group=design, conditions))
coldata
dds <- DESeqDataSetFromMatrix(x, coldata, design=~group)
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT01 <- results(ddsLRT, contrast=c("group","1","2"))
resLRT03 <- results(ddsLRT, contrast=c("group","1","3"))
resLRT08 <- results(ddsLRT, contrast=c("group","1","4"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18)}
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18, xlab="Stage", ylab="Normalized Count")}
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18, xlab="Stage")}
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18)}
summary(ddsLRT)
str(ddsLRT)
ddsLRT
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18)}
length(sig)
par(mfrow=c(8,4))
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18)}
par()
par(mai=c(0.45 0.35 0.35 0.18))
par(mai=c(0.45, 0.35, 0.35, 0.18))
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18)}
par(mai=c(0.2, 0.1, 0.1, 0.05))
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="conditions", col="blue", pch=18)}
colnames(x)
zero <- lm(T0r2~T0r3, data=x)
summary(zero)
summary(zero)
colnames(x)
one <- lm(T1r2~T1r3, data=x)
three <- lm(T3r1~T3r2+T3r3, data=x)
summary(three)
three <- lm(T3r2~T3r1+T3r3, data=x)
summary(three)
?cor
cor(x[,1:2])
cor(x[,3:4])
cor(x[,5:7])
cor(x[,8:10])
three <- lm(T3r3~T3r1+T3r2, data=x)
summary(three)
sink("C:/rnaseq/mirna_data/correlations/matrices.txt")
cor(x[,1:2])
cor(x[,3:4])
cor(x[,5:7])
cor(x[,8:10])
sink()
cor(x[,1:4])
library(DESeq2)
#x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts_10rep.txt", row.names="miRNA")
#conditions <- c("0dpa", "0dpa", "1dpa", "1dpa", "3dpa", "3dpa", "3dpa", "8dpa", "8dpa", "8dpa"
x <- read.delim("C:/RNAseq/miRNA_data/1cpm3_nopara2_counts_8rep.txt", row.names="miRNA")
conditions <- c("0dpa", "0dpa", "1dpa", "1dpa", "3dpa", "3dpa", "8dpa", "8dpa")
design <- factor(conditions)
coldata <- data.frame(cbind(colnames(x), group=design))
#DESeq
dds <- DESeqDataSetFromMatrix(x, coldata, design=~group)
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT01 <- results(ddsLRT, contrast=c("group","1","2"))
resLRT03 <- results(ddsLRT, contrast=c("group","1","3"))
resLRT08 <- results(ddsLRT, contrast=c("group","1","4"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
dev.off
dev.off()
ddsLRT <- DESeq(dds, test="LRT", full=~group, reduced= ~ 1)
plotDispEsts(ddsLRT, main="NB-GLM LRT Dispersion")
resLRT <- results(ddsLRT)
resLRT01 <- results(ddsLRT, contrast=c("group","1","2"))
resLRT03 <- results(ddsLRT, contrast=c("group","1","3"))
resLRT08 <- results(ddsLRT, contrast=c("group","1","4"))
resLRTOrdered <- resLRT[order(resLRT$padj),]
resLRTOrdered01 <- resLRT01[order(resLRT01$padj),]
resLRTOrdered03 <- resLRT03[order(resLRT03$padj),]
resLRTOrdered08 <- resLRT08[order(resLRT08$padj),]
resLRTSig <- subset(resLRT, padj < 0.05)
resLRTSig01 <- subset(resLRTOrdered01, padj < 0.05)
resLRTSig03 <- subset(resLRTOrdered03, padj < 0.05)
resLRTSig08 <- subset(resLRTOrdered08, padj < 0.05)
plotMA(resLRT01, main="0dpa v. 1dpa", ylim=c(-2,2))
plotMA(resLRT03, main="0dpa v. 3dpa", ylim=c(-2,2))
plotMA(resLRT08, main="0dpa v. 8dpa", ylim=c(-2,2))
summary(resLRT01)
summary(resLRT03)
summary(resLRT08)
summary(resLRT)
resLRT
#Plot all DE genes one-by-one
resLRTSig <- subset(resLRT, padj < 0.1)
sig <- rownames(resLRTSig)
for(item in sig){plotCounts(ddsLRT, gene=item, intgroup="group", col="blue", pch=18)}
#for(item in sig){
#d <- plotCounts(ddsLRT, gene=item, intgroup="group", returnData=TRUE)
cor(x[,1:2])
lm(T0r2~T0r3, data=x)
summary(lm(T0r2~T0r3, data=x))
.9588511*.9588511
install.packages("plspm")
install.packages("FactoMineR")
install.packages("plsdepot")
library(plsdepot)
mirna <- read.delim("C:/RNAseq/miRNA_data/compiled_mir_expression_norm_1cpm3_noparalogs2_10rep.txt")
View(mirna)
polya <- read.delim("C:/RNAseq/polyA_data/rpkm/rpkm_strand_redo_lessBC9_5for12.txt")
View(polya)
pls <- plsreg2(mirna, polya)
cols(polya)
colnames(polya)
p2 <- cbind(polya[,1:3], polya[,5:6], polya[,8:9], polya[,11:12])
View(p2)
pt <- t(p2)
mt <- t(mirna)
pls <- plsreg2(mt, pt)
dim(mt)
dim(pt)
p2 <- cbind(polya[,1:3], polya[,5:6], polya[,8:10], polya[,11:13])
pt <- t(p2)
dim(pt)
pls <- plsreg2(mt, pt)
colMeans(x)
rownames(pt) <- pt[,1]
rownames(mt) <- mt[,1]
pls <- plsreg2(mt, pt)
isFactor(mt[,1])
Class(mt[,1])
sapply(mt, class)
sapply(mt, class)[1]
cars<- as.matrix(read.table("C:/RNAseq/miRNA_data/compiled_mir_expression_norm_1cpm3_noparalogs2_10rep.txt",header=TRUE,row.names=1) )
View(cars)
mt <- t(cars)
cars<- as.matrix(read.table("C:/RNAseq/polyA_data/rpkm/rpkm_strand_redo_lessBC9_5for12.txt",header=TRUE,row.names=1) )
pt <- t(cars)
pt2 <- rbind(polya[1:3,], polya[5:6,], polya[8:10,], polya[11:13,])
pls <- plsreg2(mt, pt2)
dim(mt)
dim(pt2)
pt2 <- rbind(pt[1:3,], pt[5:6,], pt[8:10,], pt[11:13,])
dim(pt2)
pt2 <- rbind(pt[1:2,], pt[4:5,], pt[7:9,], pt[10:12,])
dim(pt2)
dim(mt)
pls <- plsreg2(mt, pt2)
summary(pls)
plot(pls)
pls
pls$x.scores
pls$expvar
pls$y.pred
summary(pls)
pls$y.pred[1]
pls$y.pred[1,1]
pls$y.pred[1,]
pls$y.pred[,1]
pls$y.pred[1:2,1]
rownames(pls$y.pred[1:2,1])
rownames(pls$y.pred)
colnames(pls$y.pred)[1:2]
summary(pls)
plot(pls$resid)
pls$VIP
pls
summary(pls)
range(pls$Q2)
range(pls$Q2cum)
quantile(pls$Q2cum)
hist(pls$Q2cum)
hist(pls$Q2)
pls$cor.tu
savehistory("C:/Users/Eli/Desktop/R scripts/PLS.Rhistory")
